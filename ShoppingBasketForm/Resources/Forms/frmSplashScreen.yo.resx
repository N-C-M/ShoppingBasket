<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="$this.BackgroundImageLayout" type="System.Windows.Forms.ImageLayout, System.Windows.Forms">
    <value>Center</value>
  </data>
</root>